{"version":3,"sources":["components/ModalGioHangRedux.js","redux/action/index.js","redux/contants/ActionType.js","components/SanPhamRedux.js","components/DanhSachSanPhamRedux.js","components/BTGioHangRedux.js","App.js","serviceWorker.js","redux/reducers/GioHangReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["ModalGioHangRedux","renderGioHang","props","gioHang","map","spGH","index","key","maSP","tenSP","src","hinhAnh","width","height","giaBan","toLocaleString","className","onClick","tangGiamSoLuong","soLuong","xoaGioHangIndex","xoaGioHangMaSP","console","log","this","colSpan","reduce","tongTien","spGioHang","Component","connect","state","GioHangReducer","dispatch","type","action","tangGiam","SanPhamRedux","sanPham","style","alt","themGioHang","DanhSachSanPhamRedux","renderSanPham","data","BTGioHangRedux","App","Boolean","window","location","hostname","match","stateGioHang","rootReducer","combineReducers","gioHangCapNhat","findIndex","push","splice","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.79955563.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport * as action from '../redux/action';\r\n\r\n// Ket noi redux can import thu vien connect (connect ham ket noi reactComponent va reduxStore)\r\nimport {connect} from 'react-redux';\r\n\r\nclass ModalGioHangRedux extends Component {\r\n    // this.props.gioHang la thuoc tinh nhan tu redux\r\n    renderGioHang = () =>{\r\n        return this.props.gioHang.map((spGH,index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>{spGH.maSP}</td>\r\n                <td>{spGH.tenSP}</td>\r\n                <td>\r\n                  <img src={spGH.hinhAnh} width=\"60\" height=\"50\"></img>\r\n                </td>\r\n                <td>{spGH.giaBan.toLocaleString()} VNĐ</td>\r\n                <td>\r\n                  <button\r\n                    className=\"mr-1\"\r\n                    onClick={() => this.props.tangGiamSoLuong(spGH.maSP, true)}\r\n                  >\r\n                    +\r\n                  </button>\r\n                  {spGH.soLuong}\r\n                  <button\r\n                    className=\"ml-1\"\r\n                    onClick={() => this.props.tangGiamSoLuong(spGH.maSP, false)}\r\n                  >\r\n                    -\r\n                  </button>\r\n                </td>\r\n                <td>{(spGH.soLuong * spGH.giaBan).toLocaleString()} VNĐ</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => this.props.xoaGioHangIndex(index)}\r\n                  >\r\n                    Xóa(index)\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => this.props.xoaGioHangMaSP(spGH.maSP)}\r\n                  >\r\n                    Xóa(Mã SP)\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // this.props.gioHang la thuoc tinh nhan tu redux\r\n        console.log(this.props.gioHang);\r\n        return (\r\n            <div className=\"container\">\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Mã sp</th>\r\n                            <th>Tên sp</th>\r\n                            <th>Hình ảnh</th>\r\n                            <th>Giá bán</th>\r\n                            <th>Số lượng</th>\r\n                            <th>Thành tiền</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderGioHang()}\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <td colSpan = '5'></td>\r\n                        <td>Tổng tiền</td>\r\n                        <td>{this.props.gioHang.reduce((tongTien, spGioHang, index) =>{\r\n                            return tongTien+= spGioHang.soLuong * spGioHang.giaBan\r\n                        },0).toLocaleString()} VNĐ</td>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{ // state: la store tong, => truy xuat den GiohangReducer => bien state tren GioHangReducer\r\n    return {\r\n        gioHang: state.GioHangReducer.gioHang //=> tao ra 1 props cua component\r\n    }\r\n}\r\n\r\n  const mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n      //       xoaGioHangIndex: index => {\r\n      //         const action = {\r\n      //           type: \"XOA_GIO_HANG\",\r\n      //           // index: index\r\n      //           index\r\n      //         };\r\n      //         // console.log(action);\r\n\r\n      //         // Dua action len reducer\r\n      //         dispatch(action);\r\n      //       },\r\n\r\n      xoaGioHangIndex: index =>{\r\n        dispatch(action.xoaGioHangIndex(index));\r\n      },\r\n\r\n\r\n\r\n      // xoaGioHangMaSP: maSP => {\r\n      //   const action = {\r\n      //     type: \"XOA_GIO_HANG_MSP\",\r\n      //     // maSP: maSP\r\n      //     maSP\r\n      //   };\r\n      //   dispatch(action);\r\n      // },\r\n\r\n      xoaGioHangMaSP: maSP => {\r\n        dispatch(action.xoaGioHangMaSP(maSP));\r\n      },\r\n\r\n\r\n      // tangGiamSoLuong: (maSP, tangGiam) => {\r\n      //     const action = {\r\n      //         type: 'TANG_GIAM_SL',\r\n      //         maSP,\r\n      //         tangGiam\r\n      //     }\r\n      //     dispatch (action)\r\n      // }\r\n\r\n      tangGiamSoLuong: (maSP, tangGiam) => {\r\n        dispatch(action.tangGiamSL(maSP, tangGiam));\r\n      }\r\n\r\n    };\r\n}\r\n\r\n// phuong thuc mapStateToProps bien state cua redux ve props truyen vao component\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ModalGioHangRedux);\r\n","import * as ActionType from '../contants/ActionType';\r\n\r\nexport const tangGiamSL = (maSP, tangGiam) =>{\r\n    return {\r\n        type:ActionType.TANG_GIAM_SL,\r\n        maSP, tangGiam\r\n    }\r\n}\r\n\r\nexport const xoaGioHangMaSP = maSP => {\r\n    return { \r\n        type:ActionType.XOA_GIO_HANG_MSP,\r\n        maSP\r\n    }\r\n}\r\n\r\nexport const xoaGioHangIndex = index =>{\r\n    return {\r\n        type: ActionType.XOA_GIO_HANG_INDEX,\r\n        index\r\n    }\r\n}\r\n\r\nexport const themGioHang = sanPham =>{\r\n\r\n    const spGioHang = {\r\n      maSP: sanPham.maSP,\r\n      tenSP: sanPham.tenSP,\r\n      giaBan: sanPham.giaBan,\r\n      soLuong: 1,\r\n      hinhAnh: sanPham.hinhAnh\r\n    };\r\n\r\n    return {\r\n      type: ActionType.THEM_GIO_HANG,\r\n      spGioHang\r\n    };\r\n\r\n    \r\n}","export const TANG_GIAM_SL = 'TANG_GIAM_SL';\r\nexport const XOA_GIO_HANG_MSP = 'XOA_GIO_HANG_MSP';\r\nexport const XOA_GIO_HANG_INDEX = 'XOA_GIO_HANG_INDEX';\r\nexport const THEM_GIO_HANG = 'THEM_GIO_HANG';","import React, { Component } from 'react'\r\nimport * as action from '../redux/action/index'\r\n\r\n// Ket noi voi reducerGioHang\r\nimport {connect} from 'react-redux';\r\n\r\nclass SanPhamRedux extends Component {\r\n    render() {\r\n        const {sanPham} = this.props;\r\n\r\n        return (\r\n          <div className=\"card\" style={{ width: \"18rem\", height: \"28rem\"}}>\r\n            <img src={sanPham.hinhAnh} className=\"card-img-top img-thumbnail\" alt=\"...\" />\r\n            <div className=\"card-body text-center\">\r\n              <h5 className=\"card-title\">{sanPham.tenSP}</h5>\r\n              <p className=\"card-text\">\r\n                {sanPham.giaBan.toLocaleString()} VNĐ\r\n              </p>\r\n              <button className =\"btn btn-success\" onClick={()=>{this.props.themGioHang(sanPham)}}>\r\n                  Mua sản phẩm\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n// xay dung ham tao ra prop la ham xu ly su kien => dua du lieu len store\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        //Tao ra props component (la function => dua du lieu len store)\r\n\r\n        // themGioHang: (sanPham) =>{\r\n        //     const spGioHang = {\r\n        //         maSP: sanPham.maSP,\r\n        //         tenSP: sanPham.tenSP,\r\n        //         giaBan: sanPham.giaBan,\r\n        //         soLuong: 1,\r\n        //         hinhAnh: sanPham.hinhAnh,\r\n        //     }\r\n\r\n        //     // Tao action dua du lieu len reducer\r\n        //     const action = {\r\n        //         type: 'THEM_GIO_HANG', // bat buoc dat ten type\r\n        //         // spGioHang: spGioHang viet boc tach nhu ben duoi cho nhanh\r\n        //         spGioHang // Noi dung gui len reducer\r\n        //     }\r\n\r\n        //     console.log(action);\r\n            \r\n        //     //Dung ham dispatch dua du lieu action len reducer\r\n        //     dispatch(action);\r\n        // }\r\n\r\n        themGioHang: sanPham =>{\r\n          dispatch(action.themGioHang(sanPham));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(SanPhamRedux);\r\n","import React, { Component } from 'react'\r\nimport data from '../data/phoneData.json'\r\nimport SanPhamRedux from './SanPhamRedux'\r\n\r\nexport default class DanhSachSanPhamRedux extends Component {\r\n\r\n    // Viet phuong thuc render sanPham render\r\n    renderSanPham = () => {\r\n        return data.map((sanPham,index) => {\r\n            return (<div className=\"col-4\" key={index}>\r\n                <SanPhamRedux sanPham = {sanPham}/>\r\n            </div>)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n          <div className=\"container\">\r\n            <hr/>\r\n            <h3 className=\"text-center text-success my-5\">\r\n              Danh Sách Sản Phẩm\r\n            </h3>\r\n            <div className=\"row mb-5\">{this.renderSanPham()}</div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ModalGioHangRedux from './ModalGioHangRedux'\r\nimport DanhSachSanPhamRedux from './DanhSachSanPhamRedux'\r\n\r\nexport default class BTGioHangRedux extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">'\r\n                <h1 className=\"text-center text-success my-5\">Bài Tập Giỏ Hàng Redux</h1>\r\n                <ModalGioHangRedux/>\r\n                <DanhSachSanPhamRedux/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport BTGioHangRedux from './components/BTGioHangRedux';\n\nfunction App() {\n  return (\n    <div>\n      <BTGioHangRedux/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as ActionType from './../contants/ActionType';\r\n\r\n// Khoi tao gia tri ban dau cua store\r\nconst stateGioHang = {\r\n  gioHang: []\r\n};\r\n\r\nexport const GioHangReducer = (state = stateGioHang,action) => {\r\n    // console.log(\"reducer\",action);\r\n  \r\n    switch (action.type) {\r\n      case ActionType.THEM_GIO_HANG: {\r\n        // xu ly logic them gio hang\r\n        let gioHangCapNhat = [...state.gioHang];\r\n        let index = gioHangCapNhat.findIndex(\r\n          spGH => spGH.maSP === action.spGioHang.maSP\r\n        );\r\n        if (index !== -1) {\r\n          gioHangCapNhat[index].soLuong += 1;\r\n        } else {\r\n          gioHangCapNhat.push(action.spGioHang);\r\n        }\r\n\r\n        state.gioHang = gioHangCapNhat;\r\n        return { ...state };\r\n      }; \r\n\r\n      case ActionType.XOA_GIO_HANG_INDEX: {\r\n        let gioHangCapNhat = [...state.gioHang];\r\n        // Xoa gio hang dua vao index\r\n        gioHangCapNhat.splice(action.index, 1);\r\n        // Gan gio hang moi cho state.gioHang => render lai giao dien\r\n        state.gioHang = gioHangCapNhat;\r\n        return { ...state };\r\n      }; \r\n\r\n      case ActionType.XOA_GIO_HANG_MSP: {\r\n        let gioHangCapNhat = [...state.gioHang];\r\n        // Tim index sp dua vao maSP\r\n        let index = gioHangCapNhat.findIndex(spGH => spGH.maSP === action.maSP);\r\n        if (index !== -1) {\r\n          // Xoa gio hang dua vao index\r\n          gioHangCapNhat.splice(action.index, 1);\r\n          // Gan gio hang moi cho state.gioHang => render lai giao dien\r\n          state.gioHang = gioHangCapNhat;\r\n          return { ...state };\r\n        }\r\n      }; break;\r\n\r\n      case ActionType.TANG_GIAM_SL:\r\n        {\r\n          const { maSP, tangGiam } = action;\r\n          console.log(action);\r\n\r\n          let gioHangCapNhat = [...state.gioHang];\r\n          let index = gioHangCapNhat.findIndex(spGH => spGH.maSP === maSP);\r\n\r\n          if (tangGiam) {\r\n            gioHangCapNhat[index].soLuong += 1;\r\n          } else {\r\n            if (gioHangCapNhat[index].soLuong > 1) {\r\n              gioHangCapNhat[index].soLuong -= 1;\r\n            }\r\n          }\r\n\r\n          state.gioHang = gioHangCapNhat;\r\n          return { ...state };\r\n        }\r\n        \r\n\r\n      default: {\r\n        return { ...state };\r\n      }; \r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport {GioHangReducer} from './GioHangReducer';\r\n\r\nexport const rootReducer = combineReducers ({\r\n    // Noi se chua cac reducer cho nghiep vu (store con)\r\n    \r\n    // ten thuoc tinh GioHangReducer co gia tri la GioHangReducer\r\n    //GioHangReducer : GioHangReducer viet nagn lai bang boc tach\r\n    GioHangReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import bootstrap\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"jquery/dist/jquery.min.js\";\nimport \"popper.js/dist/umd/popper.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\n\n\n// import redux \nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport {rootReducer} from './redux/reducers/rootReducer'\n\n// Tao Store tong\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}